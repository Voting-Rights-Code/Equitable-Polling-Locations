"""Initial SQLAlchemy models

Revision ID: 054832fa38ef
Revises: 
Create Date: 2024-11-13 14:37:39.626802

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '054832fa38ef'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('edes',
    sa.Column('id', sa.String(length=36), server_default=sa.text('GENERATE_UUID()'), nullable=False),
    sa.Column('model_run_id', sa.String(length=36), nullable=False),
    sa.Column('demographic', sa.String(length=256), nullable=True),
    sa.Column('weighted_dist', sa.Float(), nullable=True),
    sa.Column('avg_dist', sa.Float(), nullable=True),
    sa.Column('demo_res_obj_summand', sa.Float(), nullable=True),
    sa.Column('demo_pop', sa.Integer(), nullable=True),
    sa.Column('avg_kp_weight', sa.Float(), nullable=True),
    sa.Column('y_ede', sa.Float(), nullable=True),
    sa.Column('source', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model_configs',
    sa.Column('id', sa.String(length=40), nullable=False),
    sa.Column('config_set', sa.String(length=256), nullable=False),
    sa.Column('config_name', sa.String(length=256), nullable=False),
    sa.Column('location', sa.String(length=256), nullable=True),
    sa.Column('year', sa.ARRAY(sa.String(length=256)), nullable=True),
    sa.Column('bad_types', sa.ARRAY(sa.String(length=256)), nullable=True),
    sa.Column('beta', sa.Float(), nullable=True),
    sa.Column('time_limit', sa.Float(), nullable=True),
    sa.Column('penalized_sites', sa.ARRAY(sa.String(length=256)), nullable=True),
    sa.Column('precincts_open', sa.Integer(), nullable=True),
    sa.Column('maxpctnew', sa.Float(), nullable=True),
    sa.Column('minpctold', sa.Float(), nullable=True),
    sa.Column('max_min_mult', sa.Float(), nullable=True),
    sa.Column('capacity', sa.Float(), nullable=True),
    sa.Column('driving', sa.Boolean(), nullable=True),
    sa.Column('fixed_capacity_site_number', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('precinct_distances',
    sa.Column('id', sa.String(length=36), server_default=sa.text('GENERATE_UUID()'), nullable=False),
    sa.Column('model_run_id', sa.String(length=36), nullable=False),
    sa.Column('id_dest', sa.String(length=256), nullable=True),
    sa.Column('demographic', sa.String(length=256), nullable=True),
    sa.Column('weighted_dist', sa.Float(), nullable=True),
    sa.Column('demo_pop', sa.Integer(), nullable=True),
    sa.Column('avg_dist', sa.Float(), nullable=True),
    sa.Column('source', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('residence_distances',
    sa.Column('id', sa.String(length=36), server_default=sa.text('GENERATE_UUID()'), nullable=False),
    sa.Column('model_run_id', sa.String(length=36), nullable=False),
    sa.Column('id_orig', sa.Integer(), nullable=True),
    sa.Column('demographic', sa.String(length=256), nullable=True),
    sa.Column('weighted_dist', sa.Float(), nullable=True),
    sa.Column('demo_pop', sa.Integer(), nullable=True),
    sa.Column('avg_dist', sa.Float(), nullable=True),
    sa.Column('source', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('results',
    sa.Column('id', sa.String(length=36), server_default=sa.text('GENERATE_UUID()'), nullable=False),
    sa.Column('model_run_id', sa.String(length=36), nullable=False),
    sa.Column('id_orig', sa.Integer(), nullable=True),
    sa.Column('id_dest', sa.String(length=256), nullable=True),
    sa.Column('distance_m', sa.Float(), nullable=True),
    sa.Column('haversine_m', sa.Float(), nullable=True),
    sa.Column('county', sa.String(length=256), nullable=True),
    sa.Column('address', sa.String(length=256), nullable=True),
    sa.Column('dest_lat', sa.Float(), nullable=True),
    sa.Column('dest_lon', sa.Float(), nullable=True),
    sa.Column('orig_lat', sa.Float(), nullable=True),
    sa.Column('orig_lon', sa.Float(), nullable=True),
    sa.Column('location_type', sa.String(length=256), nullable=True),
    sa.Column('dest_type', sa.String(length=256), nullable=True),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('hispanic', sa.Integer(), nullable=True),
    sa.Column('non_hispanic', sa.Integer(), nullable=True),
    sa.Column('white', sa.Integer(), nullable=True),
    sa.Column('black', sa.Integer(), nullable=True),
    sa.Column('native', sa.Integer(), nullable=True),
    sa.Column('asian', sa.Integer(), nullable=True),
    sa.Column('pacific_islander', sa.Integer(), nullable=True),
    sa.Column('other', sa.Integer(), nullable=True),
    sa.Column('multiple_races', sa.Integer(), nullable=True),
    sa.Column('weighted_dist', sa.Float(), nullable=True),
    sa.Column('kp_factor', sa.Float(), nullable=True),
    sa.Column('new_location', sa.Integer(), nullable=True),
    sa.Column('matching', sa.Integer(), nullable=True),
    sa.Column('source', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model_runs',
    sa.Column('id', sa.String(length=36), server_default=sa.text('GENERATE_UUID()'), nullable=False),
    sa.Column('username', sa.String(length=256), nullable=True),
    sa.Column('commit_hash', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('model_config_id', sa.String(length=40), nullable=False),
    sa.ForeignKeyConstraint(['model_config_id'], ['model_configs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('model_runs')
    op.drop_table('results')
    op.drop_table('residence_distances')
    op.drop_table('precinct_distances')
    op.drop_table('model_configs')
    op.drop_table('edes')
    # ### end Alembic commands ###
